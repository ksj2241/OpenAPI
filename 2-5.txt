1. 요약정리
	@Query Annotation + jpql
		jpql : Java Persistence Query Language
		SQL을 추상화 했기에 특정 데이터베이스 벤더에 종속적이지 않음
		그래서 jpql을 따로 공부해야 함
		
	Query Method 사용 시, 도메인 URI에 "search"가 무조건 붙음. 이건 못바꿈
	
	실행한 결과의 href의 페이지를 만들 수 있다.
	그걸 보고 HAL Explorer 이라 함
	
	DB 서버에서 Join 하지만,
	클라이언트 간에서도 Join 가능하다
	
	양방향 시, @JsonInclude 로 처리 해야
	무한루프 돌면서 에러가 나지 않는다.
	그러나 루프돌 시,
	1:n의 경우 이 n을 돌기위해, 쿼리를 n번만큼 돈다... ㅁㅊ...
	이 문제를 해결하기 위해서
	jpql + fetch join / jpql + SQL join
	하여야 한다.
	그런데 패치조인은... 여러번돈다...
	
	※ 강사생각 : JAVA 보단 Kotlin 이 코딩적으로 보면 비전이 있을 것 같다
	
2. 추가 공부 할 내용
	RepositoryRestConfigurer?
	JPA 사용 시, 왜 제공되지 않는 URI호출 했을 때 @RepositoryRestResource의 URI로 진행이 되는가?
	jpql 란?
	HAL Explorer 란?
	Lazy , Eager 란?
	
3. 참고 URL
	