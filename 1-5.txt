1. 요약정리
	REST(REpresentational State Transfer) ?
		State = 상태, 데이터 관리가 필요한 중요한 데이터라 이해하면 됨.
		State == Data == Resource
		REST == 웹서비스 작성 방식
			기존 존재하는 기술 표준들을 조합하여 만듦.
		리소스 고유 식별자는 URI
		무상태 클라이언트/서버 아키텍처 유지(쿠키나 세션 사용 하지말란 말임)
		같은 URI이라도 get,insert,delete,update 등 method로 표기
		Representation 협상하는 과정을 Contect Negotiation 이라 함(Accept:Appliacation/json 이면 서버에서 json으로 응답).
		
		Addressablility(주소표현성)을 원칙
			계층 구조를 3~4단계 까지로만 제한
			경로에서 (_) 대신 (-)로 사용
			리소스와 직접적으로 관련 없는 것들은 HTML 헤더나 쿼리스트링파라메터로 표현
			
		HATEOAS 보단 swaggeUI 를 활용하자
		
		상태를 유지하지 말라... --> 세션 쿠키 사용하지말란말임, 사용하게되면 브라우저에 국한되어 사용되는 것임
		
		Content Negotiation(컨텐트 협상)
			쿼리스트링 파라미터 활용 (/orders/1004?output=json)
		
		URI 설계가 매우 중요하다!!!!!
		
		일부 네트워크 아나에서 GET, POST, PUT, DELETE 중,
		PUt, DELETE 를 사용 못할 시,
		POST로 통일하되, URI에 동사(update, delete)를 표현하여서 사용.
		앵간하면 PUT, DELETE 를 사용하지 말자.(트위터는 이걸로 개발안하더라)
		
		가장 좋은 원칙은 클라이언트 개발자가 개발하기 편한 서비스가 가장 잘 만든 서비스
		
		자바 객체를 json이나 xml 형태로 바꾸는 것을 직렬화(serialization) 반대는 역직렬화(Deserialization)이라 한다.
		json은 기본적으로 제공해주나, XML은 또 다른 의존성(dependency)을 추가해줘야 한다. 대표적으로 @JacksonXML 어노테이션을 많이 쓴다.
		사용하려면 Bean에 Convert 등록 해주어야 한다.(SpringBoot는 그냥 되고, SpringFrameWork는 수동 등록)
		
		Rest Service는 원격 메소드를 호출하는게 아닌 URI로 데이터를 받아오는 것
			

2. 추가 공부 할 내용
	Contect Negotiation 란?
	HATEOAS, swagge, swaggeUI 란?
	
3. 참고 URL
	https://www.w3schools.com/